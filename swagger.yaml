openapi: 3.0.0
info:
  title: xmlStarlet API Server
  version: "1.6.2"
  description: >
    API for XML processing using xmlStarlet. Endpoints are provided to extract data,
    validate, transform, and format XML files. The server automatically prepends "/app/xmlfiles"
    to the provided file paths.
servers:
  - url: http://127.0.0.1:3000
paths:
  /extract:
    post:
      summary: Extract values from an XML file using XPath
      description: Executes xmlstarlet's select command using a provided XPath expression on a given XML file.
      requestBody:
        description: JSON payload with filePath and xpath.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The file path of the XML file. The server automatically prepends "/app/xmlfiles" to this path.
                  example: "/Volumes/share/directory/A.xml"
                xpath:
                  type: string
                  description: The XPath expression to evaluate.
                  example: "count(//OM_RECORD)"
              required:
                - filePath
                - xpath
      responses:
        '200':
          description: Extraction successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The extracted value.
        '400':
          description: Invalid input parameters or file not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /validate:
    post:
      summary: Validate an XML file
      description: Uses xmlstarlet to check that an XML file is well-formed.
      requestBody:
        description: JSON payload with filePath.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The file path of the XML file to validate. The server automatically prepends "/app/xmlfiles" to this path.
                  example: "/Volumes/share/directory/A.xml"
              required:
                - filePath
      responses:
        '200':
          description: XML is valid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Invalid file path or file not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /transform:
    post:
      summary: Transform an XML file using an XSLT stylesheet
      description: Applies xmlstarlet's transform command using an XSLT file on a given XML file.
      requestBody:
        description: JSON payload with xmlFilePath and xsltFilePath.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                xmlFilePath:
                  type: string
                  description: >
                    The file path of the source XML file. The server automatically prepends "/app/xmlfiles" to this path.
                  example: "/Volumes/share/directory/A.xml"
                xsltFilePath:
                  type: string
                  description: >
                    The file path of the XSLT file. The server automatically prepends "/app/xmlfiles" to this path.
                  example: "/Volumes/share/directory/style.xslt"
              required:
                - xmlFilePath
                - xsltFilePath
      responses:
        '200':
          description: Transformation successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The transformed XML.
        '400':
          description: Invalid file paths or file not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Transformation error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string

  /format:
    post:
      summary: Format (pretty-print) an XML file
      description: >
        Uses xmlstarlet's formatting command to pretty-print an XML file.
        The server automatically prepends "/app/xmlfiles" to the provided filePath.
        If the optional "saveTo" parameter is provided (non-empty), the formatted XML is saved internally
        and a download URL is returned. Otherwise, the formatted XML is returned in the response.
      requestBody:
        description: JSON payload with filePath, optional saveTo, and optional logToConsole.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The file path of the XML file to format. The server automatically prepends "/app/xmlfiles" to this path.
                  example: "/Volumes/share/directory/A.xml"
                saveTo:
                  type: string
                  description: >
                    Optional. The desired file name for the formatted XML. If provided, the file is saved internally and a download URL is returned.
                  example: "A_formatted.xml"
                logToConsole:
                  type: boolean
                  description: >
                    Optional. If true, the formatted XML is printed to the server console.
                  example: false
              required:
                - filePath
      responses:
        '200':
          description: Formatting successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: >
                      The formatted XML (returned if saveTo is not provided).
                  message:
                    type: string
                    description: >
                      A confirmation message if the formatted XML was saved internally.
                  downloadUrl:
                    type: string
                    description: >
                      The URL from which the formatted XML file can be downloaded (if saveTo is provided).
        '400':
          description: Invalid file path or file not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Formatting error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string