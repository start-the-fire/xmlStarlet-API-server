openapi: 3.1.1
info:
  title: XML-JSON Gateway API
  version: "4.2.0"
  description: >
    The XML-JSON Gateway API is a comprehensive service designed to facilitate data exchange 
    and conversion between XML and JSON formats. It provides endpoints to extract data from XML 
    using XPath, validate, transform, and format XML files, as well as convert XML to JSON and JSON to XML, 
    and verify/correct JSON files. All file paths are automatically mapped to internal storage.
    An API key is required in the request header ("x-api-key") for authorization.
    For an API access send an email to: bernhard@ikmail.com
servers:
  - url: http://{serverIP}:3000
    description: Server configuration
    variables:
      serverIP:
        default: "127.0.0.1"
        description: "The IP address of the server (user configurable)"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
security:
  - ApiKeyAuth: []
tags:
  - name: "XML Operations"
    description: "Endpoints related to XML processing such as extraction, validation, transformation, and formatting."
  - name: "JSON Operations"
    description: "Endpoints for verifying and formatting JSON files."
  - name: "Conversion Operations"
    description: "Endpoints for converting between XML and JSON formats."
paths:
  /xmlextract:
    post:
      tags:
        - "XML Operations"
      summary: Extract Data from XML using XPath
      description: >
        Evaluates a provided XPath expression against an XML file. The API transforms the provided file path 
        to its internal storage location and returns the extracted value.
      requestBody:
        description: JSON payload containing the XML file path, the XPath expression, and an optional toggle.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The file path of the XML file. The API maps this to internal storage automatically.
                  example: "/Volumes/Helmut/helmut480-test/A.xml"
                xpath:
                  type: string
                  description: The XPath expression to evaluate.
                  example: "count(//OM_RECORD)"
                asArray:
                  type: boolean
                  description: >
                    If true, splits results on newlines and returns them as an array of strings.
                    Defaults to false (single string result).
                  example: false
              required:
                - filePath
                - xpath
      responses:
        '200':
          description: Extraction successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: string
                      - type: array
                        items:
                          type: string
                    description: >
                      The extracted value, either as a single newline-delimited string or an array of strings if `asArray` was true.
        '400':
          description: Invalid input, file not found, wrong extension, or bad XPath.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server encountered an error during extraction.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /xmlvalidate:
    post:
      tags:
        - "XML Operations"
      summary: Validate XML File
      description: >
        Checks whether an XML file is well-formed. The API transforms the file path internally and returns a validation result.
      requestBody:
        description: JSON payload with the XML file path.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The XML file path. The API maps this to internal storage automatically.
                  example: "/Volumes/Helmut/helmut480-test/A.xml"
              required:
                - filePath
      responses:
        '200':
          description: XML is valid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Invalid file path, file not found, or wrong file extension.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: XML validation error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /xmltransform:
    post:
      tags:
        - "XML Operations"
      summary: Transform XML using XSLT
      description: >
        Applies an XSLT stylesheet to an XML file to produce transformed XML. The API transforms both file paths to internal storage and returns the transformed XML.
      requestBody:
        description: JSON payload with the source XML file path and the XSLT file path.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                xmlFilePath:
                  type: string
                  description: >
                    The source XML file path. Automatically mapped to internal storage.
                  example: "/Volumes/Helmut/helmut480-test/A.xml"
                xsltFilePath:
                  type: string
                  description: >
                    The XSLT file path. Automatically mapped to internal storage.
                  example: "/Volumes/Helmut/helmut480-test/style.xslt"
              required:
                - xmlFilePath
                - xsltFilePath
      responses:
        '200':
          description: Transformation successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The transformed XML.
        '400':
          description: Invalid file paths, file not found, or incorrect file extensions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Transformation error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
  /xmlformat:
    post:
      tags:
        - "XML Operations"
      summary: Format XML File
      description: >
        Formats (pretty-prints) an XML file to improve readability. The API transforms the file path internally. 
        If a "saveTo" parameter is provided, the formatted XML is saved internally and a download URL is returned; 
        otherwise, the formatted XML is returned in the response.
      requestBody:
        description: JSON payload with the XML file path, an optional saveTo filename, and an optional logToConsole flag.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The XML file path to format. Automatically mapped to internal storage.
                  example: "/Volumes/Helmut/helmut480-test/A.xml"
                saveTo:
                  type: string
                  description: >
                    Optional. Desired filename for the formatted XML. If provided, the file is saved internally and a download URL is returned.
                  example: "A_formatted.xml"
                logToConsole:
                  type: boolean
                  description: >
                    Optional. If true, prints the formatted XML to the server console.
                  example: false
              required:
                - filePath
      responses:
        '200':
          description: XML formatting successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: >
                      The formatted XML (if "saveTo" is not provided).
                  message:
                    type: string
                    description: >
                      Confirmation message if the formatted XML was saved internally.
                  downloadUrl:
                    type: string
                    description: >
                      URL to download the formatted XML file (if "saveTo" is provided).
        '400':
          description: Invalid file path, file not found, or incorrect file extension.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Formatting error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
  /removedtp:
    post:
      tags:
        - "XML Operations"
      summary: Remove DTD from XML and save cleaned file
      description: >
        Strips out the DOCTYPE declaration from an XML file, re-encodes it from UTF-16 to UTF-8,
        and either returns the cleaned XML or saves it internally.
      requestBody:
        description: JSON payload containing the XML file path, optional file naming and flags.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: The path of the XML file to process. Mapped to internal storage.
                  example: "/Volumes/helmut_1/file.xml"
                saveTo:
                  type: string
                  description: >
                    Optional filename (with `.xml`) for the cleaned output. 
                    If omitted, defaults to `<original>_removedDTP.xml`.
                  example: "file_removedDTP.xml"
                logToConsole:
                  type: boolean
                  description: If true, prints the cleaned XML to the server console.
                  example: false
                viaUrl:
                  type: boolean
                  description: >
                    If true, saves the cleaned XML into the download directory and returns a download URL.
                    If false (default), writes the cleaned file alongside the source.
                  example: false
              required:
                - filePath
      responses:
        '200':
          description: DTD removal successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: The cleaned XML (if `viaUrl` is false and no `saveTo`).
                  message:
                    type: string
                    description: Confirmation message (if file was saved).
                  downloadUrl:
                    type: string
                    description: URL to download the cleaned XML (if `viaUrl` true).
                  inputFile:
                    type: string
                    description: The original XML filename (when `viaUrl` false).
                  outputFile:
                    type: string
                    description: The cleaned XML filename.
        '400':
          description: Invalid input, file not found, or wrong extension.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Error during DTD removal or file write.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
  /xmltojson:
    post:
      tags:
        - "Conversion Operations"
      summary: Convert XML to JSON
      description: >
        Converts an XML file into JSON format using fast-xml-parser. The API transforms the XML file path internally. 
        If a "saveTo" parameter is provided (with a .json extension), the converted JSON is saved internally and a download URL is returned; 
        otherwise, the JSON is returned in the response.
      requestBody:
        description: JSON payload with the XML file path, an optional saveTo filename (with .json extension), and an optional logToConsole flag.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The XML file path to convert. Automatically mapped to internal storage.
                  example: "/Volumes/Helmut/helmut480-test/A.xml"
                saveTo:
                  type: string
                  description: >
                    Optional. Desired filename for the converted JSON. If provided, must have a .json extension.
                  example: "A_converted.json"
                logToConsole:
                  type: boolean
                  description: >
                    Optional. If true, prints the converted JSON to the server console.
                  example: false
              required:
                - filePath
      responses:
        '200':
          description: XML to JSON conversion successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: >
                      The converted JSON (if "saveTo" is not provided).
                  message:
                    type: string
                    description: >
                      Confirmation message if the JSON was saved internally.
                  downloadUrl:
                    type: string
                    description: >
                      URL to download the converted JSON file (if "saveTo" is provided).
        '400':
          description: Invalid file path, file not found, or incorrect input/saveTo file extension.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Conversion error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
  /jsontoxml:
    post:
      tags:
        - "Conversion Operations"
      summary: Convert JSON to XML
      description: >
        Converts a JSON file into XML format using fast-xml-parser's XMLBuilder. The API transforms the JSON file path internally. 
        If a "saveTo" parameter is provided (with a .xml extension), the converted XML is saved internally and a download URL is returned; 
        otherwise, the XML is returned in the response.
      requestBody:
        description: JSON payload with the JSON file path, an optional saveTo filename (with .xml extension), and an optional logToConsole flag.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The JSON file path to convert. Automatically mapped to internal storage.
                  example: "/Volumes/Helmut/helmut480-test/A.json"
                saveTo:
                  type: string
                  description: >
                    Optional. Desired filename for the converted XML. If provided, must have a .xml extension.
                  example: "A_converted.xml"
                logToConsole:
                  type: boolean
                  description: >
                    Optional. If true, prints the converted XML to the server console.
                  example: false
              required:
                - filePath
      responses:
        '200':
          description: JSON to XML conversion successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: >
                      The converted XML (if "saveTo" is not provided).
                  message:
                    type: string
                    description: >
                      Confirmation message if the XML was saved internally.
                  downloadUrl:
                    type: string
                    description: >
                      URL to download the converted XML file (if "saveTo" is provided).
        '400':
          description: Invalid file path, file not found, or incorrect input/saveTo file extension.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Conversion error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
  /jsonextract:
    post:
      tags:
        - "JSON Operations"
      summary: Extract a specific key from a JSON file
      description: >
        Extracts the value(s) corresponding to the specified key from a JSON file.
        The API maps the JSON file path internally and returns the extracted result.
        If an optional index parameter is provided:
        - If set to -1, all available values are returned.
        - Otherwise, the value at that index is returned.
      requestBody:
        description: JSON payload with the JSON file path, the key to extract, an optional index, and an optional logToConsole flag.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: The JSON file path to extract from.
                  example: "/Volumes/helmut_1/valid.json"
                key:
                  type: string
                  description: The key to search for in the JSON file.
                  example: "city"
                index:
                  type: integer
                  description: >
                    Optional. The index of the element to extract from the key’s value if it is an array.
                    If set to -1, all available values are returned.
                  example: 1
                logToConsole:
                  type: boolean
                  description: Optional. If true, prints additional logs to the server console.
                  example: false
              required:
                - filePath
                - key
      responses:
        '200':
          description: JSON extraction successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    description: The extracted value or values corresponding to the key.
                    oneOf:
                      - type: array
                      - type: string
                      - type: number
                      - type: boolean
                      - type: object
        '400':
          description: Invalid input or key not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error during JSON extraction.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
  /jsonverify:
    post:
      tags:
        - "JSON Operations"
      summary: Verify JSON File Validity
      description: >
        Reads a JSON file and checks whether it is valid by attempting to parse it. 
        The API transforms the file path internally and returns the validation result.
      requestBody:
        description: JSON payload with the JSON file path and an optional logToConsole flag.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The JSON file path to verify. Automatically mapped to internal storage.
                  example: "/Volumes/Helmut/helmut480-test/A.json"
                logToConsole:
                  type: boolean
                  description: >
                    Optional. If true, additional logging is printed to the server console.
                  example: false
              required:
                - filePath
      responses:
        '200':
          description: JSON verification successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: Indicates if the JSON is valid.
                  message:
                    type: string
                    description: A message indicating JSON validity.
        '400':
          description: Invalid file path, incorrect extension, or JSON file not found/invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  error:
                    type: string
                  details:
                    type: string
  /jsonformat:
    post:
      tags:
        - "JSON Operations"
      summary: Format and Correct JSON File
      description: >
        Attempts to format (pretty-print) a JSON file. If the JSON is valid, returns the formatted version.
        If invalid, the API will attempt to repair it using jsonrepair. The API transforms the file path internally.
        If a "saveTo" parameter is provided (with a .json extension), the corrected JSON is saved internally and a download URL is returned;
        otherwise, the corrected JSON is returned in the response.
      requestBody:
        description: JSON payload with the JSON file path, an optional saveTo filename, and an optional logToConsole flag.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  description: >
                    The JSON file path to format/correct. Automatically mapped to internal storage.
                  example: "/Volumes/Helmut/helmut480-test/A.json"
                saveTo:
                  type: string
                  description: >
                    Optional. Desired filename for the corrected JSON. If provided, must have a .json extension.
                  example: "A_corrected.json"
                logToConsole:
                  type: boolean
                  description: >
                    Optional. If true, prints the corrected JSON to the server console.
                  example: false
              required:
                - filePath
      responses:
        '200':
          description: JSON formatting/correction successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: >
                      The corrected JSON (if "saveTo" is not provided).
                  message:
                    type: string
                    description: >
                      Confirmation message if the corrected JSON was saved internally.
                  downloadUrl:
                    type: string
                    description: >
                      URL to download the corrected JSON file (if "saveTo" is provided).
        '400':
          description: Invalid file path, incorrect extension, file not found, or unrepaired JSON errors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
        '500':
          description: Formatting/correction error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string